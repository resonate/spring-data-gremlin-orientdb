plugins {
    id 'org.springframework.boot' version '1.5.6.RELEASE' apply false
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'maven-publish'

bootRepackage.enabled = false

group = "com.resonate"
if(project.hasProperty("teamcity")) {
    version teamcity['build.number']
} else {
    version 'SNAPSHOT'
}
sourceCompatibility = "1.8"

repositories {
    mavenLocal()
    maven { url 'https://repo.spring.io/libs-release' }
    maven { url 'https://repo.spring.io/libs-snapshot' }
    maven { url "http://nexus.domain.local/nexus/content/repositories/snapshots" }
    mavenCentral()
}

dependencies {
    compile('com.resonate:spring-data-gremlin-core:0.12.d194d22-SNAPSHOT')
    compile('com.orientechnologies:orientdb-lucene:2.2.26')
    compile('com.orientechnologies:orientdb-graphdb:2.2.26')
    compile('com.orientechnologies:orientdb-spatial:2.2.26')

    compile('org.springframework.boot:spring-boot-starter')
    compile('org.springframework:spring-tx')
    compile('org.springframework.data:spring-data-commons:1.11.0.RELEASE')

    compile('org.codehaus.groovy:groovy:1.8.9')
    compile('com.tinkerpop.blueprints:blueprints-core:2.6.0')
    compile('com.tinkerpop.gremlin:gremlin-java:2.6.0')
    compile('com.tinkerpop.gremlin:gremlin-groovy:2.6.0')

    compile('org.apache.commons:commons-collections4:4.0')
    compile('org.apache.commons:commons-lang3:3.4')
    compile('org.reflections:reflections:0.9.9-RC1')

    testCompile('junit:junit:4.12')
    testCompile('org.mockito:mockito-core:1.10.19')
    testCompile("org.springframework:spring-test")
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.5.1'
}

artifacts {
    archives javadocJar, sourcesJar
}

javadoc {
    failOnError = false
}

if (!project.hasProperty('mavenUser')){
    ext.mavenUser = ''
}
if (!project.hasProperty('mavenPassword')){
    ext.mavenPassword = ''
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            credentials {
                username mavenUser
                password mavenPassword
            }
            name "snapshots"
            url "http://nexus/nexus/content/repositories/snapshots"
        }
    }
}